// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop.Data.Context;

#nullable disable

namespace Shop.Data.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20230613044721_xoanhanvien")]
    partial class xoanhanvien
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Shop.Data.Models.Anh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DuongDan")
                        .IsRequired()
                        .HasColumnType("varchar(400)");

                    b.Property<Guid?>("IdCtsp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCtsp");

                    b.ToTable("Anhs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("34c178f4-fa6b-4f5c-bd34-784393a8437a"),
                            DuongDan = "/image/1.png",
                            IdCtsp = new Guid("ed52daa9-f264-44af-af2e-fcf01955f968"),
                            Ma = "anh1",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("dbfa5886-01ab-401f-b671-9a5d1e070e28"),
                            DuongDan = "/image/2.png",
                            IdCtsp = new Guid("ed52daa9-f264-44af-af2e-fcf01955f968"),
                            Ma = "anh2",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("2f355c69-3c5a-42e5-895a-e5093bf41e79"),
                            DuongDan = "/image/3.png",
                            IdCtsp = new Guid("ed52daa9-f264-44af-af2e-fcf01955f968"),
                            Ma = "anh3",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("27ce22ac-ff4e-4442-83e0-6289ef849328"),
                            DuongDan = "/image/4.png",
                            IdCtsp = new Guid("ed52daa9-f264-44af-af2e-fcf01955f968"),
                            Ma = "anh4",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("d6c09720-859c-4a45-9123-d2a9853dd720"),
                            DuongDan = "/image/5.png",
                            IdCtsp = new Guid("ed52daa9-f264-44af-af2e-fcf01955f968"),
                            Ma = "anh5",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.CapBac", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoDiemCan")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CapBacs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76a8265a-1c5a-4b8c-9a53-c5b2937b9731"),
                            Ma = "hang1",
                            SoDiemCan = 0,
                            Ten = "Thân Thiện",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("1fa242d3-99c5-4d96-84a7-2a0c42c5f01a"),
                            Ma = "hang2",
                            SoDiemCan = 500,
                            Ten = "Đồng",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("fb0496fb-aef3-4693-9cf7-8f66ae988a9b"),
                            Ma = "hang3",
                            SoDiemCan = 1000,
                            Ten = "Bạc",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("8384a802-700c-4040-b80d-744a028a74e0"),
                            Ma = "hang4",
                            SoDiemCan = 2000,
                            Ten = "Vàng",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("894e4300-be80-489c-ad4b-c81cca3ef451"),
                            Ma = "hang5",
                            SoDiemCan = 5000,
                            Ten = "Bạch Kim",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("746cb698-abdc-42a4-8f0c-f6aea599dfba"),
                            Ma = "hang6",
                            SoDiemCan = 10000,
                            Ten = "Kim Cương",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChucVus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0abfb76-d44c-42e0-8a7a-542e55b874c0"),
                            Ma = "cv1",
                            Ten = "Quan Ly",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("3698ae73-eaf4-414e-890c-32d7e8073a1c"),
                            Ma = "cv2",
                            Ten = "Nhân Viên Bán Hàng",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.CTGioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCtsp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCtsp");

                    b.HasIndex("IdKh");

                    b.ToTable("CTGioHangs");
                });

            modelBuilder.Entity("Shop.Data.Models.CTHoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdCtsp")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdHoaDon")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCtsp");

                    b.HasIndex("IdHoaDon");

                    b.ToTable("CTHoaDons");
                });

            modelBuilder.Entity("Shop.Data.Models.CTSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhBanDau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaNhap")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdDanhMuc")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdGiamGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdKichCo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdMauSac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSanPham")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDanhMuc");

                    b.HasIndex("IdGiamGia");

                    b.HasIndex("IdKichCo");

                    b.HasIndex("IdMauSac");

                    b.HasIndex("IdSanPham");

                    b.ToTable("CTSanPhams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed52daa9-f264-44af-af2e-fcf01955f968"),
                            AnhBanDau = "/AnhSanPham/1.webp",
                            GiaBan = 1500000m,
                            GiaNhap = 1000000m,
                            IdDanhMuc = new Guid("a1ef45d3-64a2-41db-8e2f-92f94be68901"),
                            IdGiamGia = new Guid("408db8d3-3690-454c-bef4-bdfe2e6c117a"),
                            IdKichCo = new Guid("1f9ef290-cba3-4fd5-a5d8-453c1ab422a2"),
                            IdMauSac = new Guid("a427ff0d-44ac-4194-9c72-ca86f0d84b4e"),
                            IdSanPham = new Guid("9cfe9060-0102-427e-a78f-1d8706ff1ded"),
                            Ma = "ctsp1",
                            MoTa = "Sneakers with a sharp-looking minimalist design. Designed with fine details for superb comfort.",
                            SoLuongTon = 100,
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("93351f9a-eb83-4bc2-969d-a46275a16c7a"),
                            AnhBanDau = "/AnhSanPham/2.webp",
                            GiaBan = 799000m,
                            GiaNhap = 700000m,
                            IdDanhMuc = new Guid("d2a7e269-21e1-4dec-969a-b034ddc2ce56"),
                            IdGiamGia = new Guid("a0078543-2638-481e-9609-17960504eb63"),
                            IdKichCo = new Guid("f342f0a1-7e87-4917-979c-02d5ba80be80"),
                            IdMauSac = new Guid("2e97d6b9-2f4a-4b41-accf-18f86223621d"),
                            IdSanPham = new Guid("5033bc0f-afe2-4f74-b15b-f1fcc36d2aa3"),
                            Ma = "ctsp2",
                            MoTa = "Sneakers with a sharp-looking minimalist design. Designed with fine details for superb comfort.",
                            SoLuongTon = 90,
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.DanhMuc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DanhMucs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1ef45d3-64a2-41db-8e2f-92f94be68901"),
                            Ma = "dm1",
                            Ten = "Real",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("d2a7e269-21e1-4dec-969a-b034ddc2ce56"),
                            Ma = "dm2",
                            Ten = "Rep 1:1",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.GiamGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DieuKienGiamGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiGiamGia")
                        .HasColumnType("int");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MucGiamGiaPhanTram")
                        .HasColumnType("int");

                    b.Property<decimal>("MucGiamGiaTienMat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GiamGias");

                    b.HasData(
                        new
                        {
                            Id = new Guid("408db8d3-3690-454c-bef4-bdfe2e6c117a"),
                            DieuKienGiamGia = "Mười",
                            LoaiGiamGia = 1,
                            Ma = "gg1",
                            MucGiamGiaPhanTram = 10,
                            MucGiamGiaTienMat = 100000m,
                            NgayBatDau = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2023, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ten = "Xả hàng",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("a0078543-2638-481e-9609-17960504eb63"),
                            DieuKienGiamGia = "Hai",
                            LoaiGiamGia = 2,
                            Ma = "gg2",
                            MucGiamGiaPhanTram = 40,
                            MucGiamGiaTienMat = 200000m,
                            NgayBatDau = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2023, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ten = "Hàng Tồn Kho",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.GioHang", b =>
                {
                    b.Property<Guid>("IdKh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("varchar(400)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdKh");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("Shop.Data.Models.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("IdKh")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdVoucher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MaKh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayNhan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayShip")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<int>("PhanTramGiamGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("SdtNguoiNhan")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("SdtNguoiShip")
                        .HasColumnType("varchar(25)");

                    b.Property<int>("SoDiemSuDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<decimal>("SoTienQuyDoi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("TenKh")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("TenNguoiShip")
                        .HasColumnType("nvarchar(256)");

                    b.Property<decimal>("TienShip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKh");

                    b.HasIndex("IdVoucher");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("Shop.Data.Models.KhachHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid?>("IdBac")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoDiem")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("TenTaiKhoan")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBac");

                    b.ToTable("KhachHangs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bc9a001-7fa3-4a16-a4ee-34df4fcc53c5"),
                            DiaChi = "Cầu Giấy, Hà Nội",
                            Email = "hq37na@gmail.com",
                            GhiChu = "Khách hàng thân thiện",
                            GioiTinh = 1,
                            HoVaTen = "Nguyễn Kim Học",
                            IdBac = new Guid("76a8265a-1c5a-4b8c-9a53-c5b2937b9731"),
                            Ma = "kh1",
                            MatKhau = "hoc123456",
                            NgaySinh = new DateTime(2003, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDiem = 0,
                            SoDienThoai = "0395297378",
                            TenTaiKhoan = "hocnk123",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("c63a7259-0d4d-4d80-80db-774922c47951"),
                            DiaChi = "Sóc Sơn, Hà Nội",
                            Email = "cuongnpm@gmail.com",
                            GhiChu = "Khách hàng Bạch Kim",
                            GioiTinh = 1,
                            HoVaTen = "Nguyễn Phúc Minh Cương",
                            IdBac = new Guid("894e4300-be80-489c-ad4b-c81cca3ef451"),
                            Ma = "kh2",
                            MatKhau = "cuong123456",
                            NgaySinh = new DateTime(2003, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDiem = 5000,
                            SoDienThoai = "0972756511",
                            TenTaiKhoan = "cuongnpm123",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.KichCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoSize")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("KichCos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f9ef290-cba3-4fd5-a5d8-453c1ab422a2"),
                            Ma = "kc1",
                            SoSize = 40,
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("f342f0a1-7e87-4917-979c-02d5ba80be80"),
                            Ma = "kc2",
                            SoSize = 42,
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.MauSac", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MauSacs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a427ff0d-44ac-4194-9c72-ca86f0d84b4e"),
                            Ma = "ms1",
                            Ten = "Trắng",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("2e97d6b9-2f4a-4b41-accf-18f86223621d"),
                            Ma = "ms2",
                            Ten = "Đen",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.NhanVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anh")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(75)");

                    b.Property<Guid>("IdCv")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("TenTaiKhoan")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("TenTaiKhoan");

                    b.HasIndex("IdCv");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("Shop.Data.Models.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SanPhams");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9cfe9060-0102-427e-a78f-1d8706ff1ded"),
                            Ma = "sp1",
                            Ten = "Giày Converse",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("5033bc0f-afe2-4f74-b15b-f1fcc36d2aa3"),
                            Ma = "sp2",
                            Ten = "Cotton On Ruby ",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("NgayApDung")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("SoTienCan")
                        .HasColumnType("decimal");

                    b.Property<decimal>("SoTienGiam")
                        .HasColumnType("decimal");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vouchers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90c348df-4cfa-428e-873b-8a700340c99a"),
                            Ma = "v1",
                            MoTa = "Mua một triệu giảm 100000",
                            NgayApDung = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 100,
                            SoTienCan = 1000000m,
                            SoTienGiam = 100000m,
                            Ten = "Giảm giá tháng 5 và 6",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("97078617-27fc-4874-afaf-1e5e8468fe95"),
                            Ma = "v2",
                            MoTa = "Giảm 400000 khi mua hàng đạt 2000000vnd",
                            NgayApDung = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NgayKetThuc = new DateTime(2023, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoLuong = 50,
                            SoTienCan = 2000000m,
                            SoTienGiam = 400000m,
                            Ten = "Giảm giá tháng 5",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Shop.Data.Models.Anh", b =>
                {
                    b.HasOne("Shop.Data.Models.CTSanPham", "CTSanPham")
                        .WithMany("Anhs")
                        .HasForeignKey("IdCtsp");

                    b.Navigation("CTSanPham");
                });

            modelBuilder.Entity("Shop.Data.Models.CTGioHang", b =>
                {
                    b.HasOne("Shop.Data.Models.CTSanPham", "CTSanPham")
                        .WithMany("CTGioHangs")
                        .HasForeignKey("IdCtsp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Data.Models.GioHang", "GioHang")
                        .WithMany("CTGioHangs")
                        .HasForeignKey("IdKh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CTSanPham");

                    b.Navigation("GioHang");
                });

            modelBuilder.Entity("Shop.Data.Models.CTHoaDon", b =>
                {
                    b.HasOne("Shop.Data.Models.CTSanPham", "CTSanPham")
                        .WithMany("CTHoaDons")
                        .HasForeignKey("IdCtsp")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Data.Models.HoaDon", "HoaDon")
                        .WithMany("CTHoaDons")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CTSanPham");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Shop.Data.Models.CTSanPham", b =>
                {
                    b.HasOne("Shop.Data.Models.DanhMuc", "DanhMuc")
                        .WithMany("CTSanPhams")
                        .HasForeignKey("IdDanhMuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Data.Models.GiamGia", "GiamGia")
                        .WithMany("CTSanPhams")
                        .HasForeignKey("IdGiamGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Data.Models.KichCo", "KichCo")
                        .WithMany("CTSanPhams")
                        .HasForeignKey("IdKichCo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Data.Models.MauSac", "MauSac")
                        .WithMany("CTSanPhams")
                        .HasForeignKey("IdMauSac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shop.Data.Models.SanPham", "SanPham")
                        .WithMany("CTSanPhams")
                        .HasForeignKey("IdSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMuc");

                    b.Navigation("GiamGia");

                    b.Navigation("KichCo");

                    b.Navigation("MauSac");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("Shop.Data.Models.GioHang", b =>
                {
                    b.HasOne("Shop.Data.Models.KhachHang", "KhachHang")
                        .WithOne("GioHang")
                        .HasForeignKey("Shop.Data.Models.GioHang", "IdKh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Shop.Data.Models.HoaDon", b =>
                {
                    b.HasOne("Shop.Data.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdKh");

                    b.HasOne("Shop.Data.Models.Voucher", "Voucher")
                        .WithMany("HoaDons")
                        .HasForeignKey("IdVoucher");

                    b.Navigation("KhachHang");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Shop.Data.Models.KhachHang", b =>
                {
                    b.HasOne("Shop.Data.Models.CapBac", "CapBac")
                        .WithMany("KhachHangs")
                        .HasForeignKey("IdBac");

                    b.Navigation("CapBac");
                });

            modelBuilder.Entity("Shop.Data.Models.NhanVien", b =>
                {
                    b.HasOne("Shop.Data.Models.ChucVu", "ChucVu")
                        .WithMany("NhanViens")
                        .HasForeignKey("IdCv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucVu");
                });

            modelBuilder.Entity("Shop.Data.Models.CapBac", b =>
                {
                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("Shop.Data.Models.ChucVu", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("Shop.Data.Models.CTSanPham", b =>
                {
                    b.Navigation("Anhs");

                    b.Navigation("CTGioHangs");

                    b.Navigation("CTHoaDons");
                });

            modelBuilder.Entity("Shop.Data.Models.DanhMuc", b =>
                {
                    b.Navigation("CTSanPhams");
                });

            modelBuilder.Entity("Shop.Data.Models.GiamGia", b =>
                {
                    b.Navigation("CTSanPhams");
                });

            modelBuilder.Entity("Shop.Data.Models.GioHang", b =>
                {
                    b.Navigation("CTGioHangs");
                });

            modelBuilder.Entity("Shop.Data.Models.HoaDon", b =>
                {
                    b.Navigation("CTHoaDons");
                });

            modelBuilder.Entity("Shop.Data.Models.KhachHang", b =>
                {
                    b.Navigation("GioHang");

                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("Shop.Data.Models.KichCo", b =>
                {
                    b.Navigation("CTSanPhams");
                });

            modelBuilder.Entity("Shop.Data.Models.MauSac", b =>
                {
                    b.Navigation("CTSanPhams");
                });

            modelBuilder.Entity("Shop.Data.Models.SanPham", b =>
                {
                    b.Navigation("CTSanPhams");
                });

            modelBuilder.Entity("Shop.Data.Models.Voucher", b =>
                {
                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
